<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tensorflow Internal</title>
  <subtitle>All about tensorflow</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://deeptensorflow.github.io/"/>
  <updated>2017-02-19T06:22:35.000Z</updated>
  <id>https://deeptensorflow.github.io/</id>
  
  <author>
    <name>MyeongsooKim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>선형회귀란 무엇을까? 텐서플로우를 통해 알아보자(linear regression)</title>
    <link href="https://deeptensorflow.github.io/2017/02/19/what-is-linear-regression-with-tensorflow/"/>
    <id>https://deeptensorflow.github.io/2017/02/19/what-is-linear-regression-with-tensorflow/</id>
    <published>2017-02-19T04:44:28.000Z</published>
    <updated>2017-02-19T06:22:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="선형회귀-linear-regression"><a href="#선형회귀-linear-regression" class="headerlink" title="선형회귀(linear regression)"></a>선형회귀(linear regression)</h1><ul>
<li>위키백과</li>
</ul>
<p>선형회귀란  종속 변수 y와 한 개 이상의 독립 변수 (또는 설명 변수) X와의 선형 상관 관계를 모델링하는 회귀분석 기법입니다.<br>한 개의 설명 변수에 기반한 경우에는 단순 선형 회귀, 둘 이상의 설명 변수에 기반한 경우에는 다중 선형 회귀라고 합니다.</p>
<ul>
<li>쉽게 설명하자면…</li>
</ul>
<p>어떤사람은 2시간 공부해서 시험점수를 30점을 받았습니다.<br>어떤사람은 3시간 공부해서 40점을, 어떤사람은 4시간 공부해서 50점을 받았습니다.<br>이럴 경우에 공부시간과 시험점수 사이에 어떤 관계가 있는지 알아보고 싶겠죠?<br>이럴 때 자주 쓰이는 기법이 선형 회귀입니다.<br>그리고 더 세분화 하자면 결과에 미치는 요인이 한개이기 때문에 단순 선형 회귀라고 부릅니다.<br>단순한 공부시간 뿐만 아니라 학교의 출석율도 한번 설명 변수로 넣어보겠습니다.<br>어떤 사람은 2시간을 공부하고 학교에 5번 출석을 해서 20점을 받았습니다.<br>어떤 사람은 2시간을 공부하고 학교에 10번을 출석해서 30점을 받았구요!<br>어떤 사람은 5시간을 공부하고 학교에 20번을 출석해서 50점을 받았다고 가정하겠습니다.<br>공부시간, 학교 출석율이 시험점수에 얼마나 영향을 미치는지 궁금하죠?<br>이럴때 자주 쓰이는 기법이 선형 회귀입니다.<br>더 세분화 하자면 설명 변수가 둘 이상이니 다중 선형 회귀라고 합니다.</p>
<ul>
<li>방정식으로 알아보자</li>
</ul>
<p>위의 경우에 아래의 방정식이 세워지죠?<br>Y(시험점수) = x1(공부한시간) <em> w1(공부시간과 시험점수의 상관계수) + x2(학교 출석율) </em> w2(학교 출석율과 시험점수의 상관계수) + b(보정값)<br>요약하자면 Y = x1<em>w1 +x2</em>w2 + b 입니다.<br>중학교 때 많이 본 함수이지요?<br>이런 모델을 써서 설명변수(x1, x2)와 종속변수(Y)의 상관관계를 알고자 하는 방법인 것입니다.</p>
<ul>
<li>텐서플로우로 단순 선형 회귀에 대해 알아보자</li>
</ul>
<p>일부러 상관관계를 알기 쉽도록 눈에 보이는 모델을 써봤습니다.<br>공부시간이 1, 2, 3시간일때 시험 점수가 2, 4, 6점이라면?<br>Y = x1*w1 + b의 모델이 짜질 것입니다.<br>그리고 w1은 2, b는 0이 되어야 주어진 방정식을 만족할 것이라는 것을 우리는 알 수 있죠.<br>한번 텐서플로우 코드로 확인해 보겠습니다.</p>
<figure class="highlight plain"><figcaption><span>tf_linear_regression</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"># 텐서플로우를 사용할 것을 알려줍니다.</div><div class="line">import tensorflow as tf</div><div class="line"></div><div class="line"># x_data는 공부시간, y_data는 시험성적 입니다.</div><div class="line">x_data = [1, 2, 3]</div><div class="line">y_data = [2, 4, 6]</div><div class="line"></div><div class="line"># W는 설명변수, b는 보정값 입니다.</div><div class="line">W = tf.Variable(tf.random_uniform([1], -1.0, 1.0))</div><div class="line">b = tf.Variable(tf.random_uniform([1], -1.0, 1.0))</div><div class="line"></div><div class="line"># placeholder를 사용하면 변수의 형태만 지정해주고 나중에 값을 넣어줘도 됩니다.</div><div class="line">X = tf.placeholder(tf.float32)</div><div class="line">Y = tf.placeholder(tf.float32)</div><div class="line"></div><div class="line"># 방정식 모델입니다.</div><div class="line">hypothesis = W * X + b</div><div class="line"></div><div class="line"># cost 함수입니다. 뒤어서 설명하겠습니다.</div><div class="line">cost = tf.reduce_mean(tf.square(hypothesis - Y))</div><div class="line"></div><div class="line"># Gradient Descent 또한 뒤에서 설명하겠습니다.</div><div class="line">a = tf.Variable(0.1)</div><div class="line">optimizer = tf.train.GradientDescentOptimizer(a)</div><div class="line">train = optimizer.minimize(cost)</div><div class="line"></div><div class="line"># 변수들을 초기화합니다.</div><div class="line">init = tf.global_variables_initializer()</div><div class="line"></div><div class="line"># 텐서플로우를 시작하게 하는 구문이라고 보시면 됩니다. 세션을 지정해줍니다.</div><div class="line">sess = tf.Session()</div><div class="line">sess.run(init)</div><div class="line"></div><div class="line"># X에 x_data를, Y에 y_data를 넣어서 2001번 소스를 돌려가며 W와 b값을 찾아갑니다.</div><div class="line">for step in range(2001):</div><div class="line">    sess.run(train, feed_dict=&#123;X: x_data, Y: y_data&#125;)</div><div class="line">    if step % 200 == 0:</div><div class="line">        print(step, sess.run(cost, feed_dict=&#123;X: x_data, Y: y_data&#125;), sess.run(W), sess.run(b))</div><div class="line"></div><div class="line"># 5시간 공부했을때와 2.5시간 공부했을 때 몇점이 나올지 출력해봅니다.</div><div class="line">print(sess.run(hypothesis, feed_dict=&#123;X: 5&#125;))</div><div class="line">print(sess.run(hypothesis, feed_dict=&#123;X: 2.5&#125;))</div><div class="line"></div></pre></td></tr></table></figure>
<ul>
<li>결과입니다.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># 순서대로 몇번째 트레이닝인지, 오차범위, W값, b값 입니다.</div><div class="line">0 0.245183 [ 2.28380156] [-0.13001066]</div><div class="line">200 3.87879e-07 [ 2.00072336] [-0.00164423]</div><div class="line">400 2.25526e-11 [ 2.00000548] [ -1.27652002e-05]</div><div class="line">600 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">800 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">1000 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">1200 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">1400 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">1600 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">1800 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line">2000 1.51582e-13 [ 2.00000072] [ -1.24958285e-06]</div><div class="line"></div><div class="line"># 5시간 공부했을 때와 2.5시간 공부했을 때를 출력해줍니다.</div><div class="line">[ 10.00000286]</div><div class="line">[ 5.00000048]</div></pre></td></tr></table></figure>
<ul>
<li>cost 함수 &amp; gradient descent란?</li>
</ul>
<p>김성훈 교수님의 강의가 이것을 이해하는데는 최고 같습니다.<br>아래의 비디오 두편만 보면 이해가 빡!<br><div class="video-container"><iframe src="//www.youtube.com/embed/Hax03rCn3UI" frameborder="0" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="//www.youtube.com/embed/TxIVr-nk1so" frameborder="0" allowfullscreen></iframe></div></p>
<ul>
<li>다중 선형 회귀 함수는 어떻게 처리를 할까요?</li>
</ul>
<p>다중 선형 회귀함수를 보기 좋게 처리하려면 한가지 아이디어가 필요합니다.<br>행렬의 아이디어가 필요한데요.<br>Y = X1<em>W1 + X2</em>W2 + X3<em>W3 + …. + b 이런 꼴이 선형 회귀 모델인데요.<br>이것을 어떻게 간결하게 표현할 방법이 없을까요?<br>있습니다!<br>Y = X1</em>W1 + X2<em>W2 + X3</em>W3 +… + 1*b의 꼴로 두면 됩니다.<br>그리고 이것을 행렬로 변환!<br><img src="https://deeptensorflow.github.io/images/linear_regression.png" alt="linearregression"><br>요런식으로 행렬로 관리하면 되겠죠?<br>(아, b1, b2, … bn은 전부 같은 값입니다.)<br>그런데 더 간략하게 하고 싶다면 b까지 행렬에 포함시킬 수 있습니다.<br><img src="https://deeptensorflow.github.io/images/multi_linear_regression.png" alt="multi_linearregression"><br>이럴경우에 코드는 어떻게 되냐구요?</p>
<ul>
<li>다중 선형 회귀 함수 텐서플로우 예시 코드</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">import tensorflow as tf</div><div class="line"></div><div class="line">x_data = [[1., 2., 5.],[1., 3., 7.], [1., 4., 10.], [1., 7., 12.]]</div><div class="line">y_data = [1., 2., 3., 4.]</div><div class="line"></div><div class="line">W = tf.Variable(tf.random_uniform([3,1], -1, 1))</div><div class="line"></div><div class="line"># 이거 한줄로 가설함수 끝!</div><div class="line">hypothesis = tf.matmul(x_data, W)</div><div class="line"></div><div class="line">cost = tf.reduce_mean(tf.square(hypothesis - y_data))</div><div class="line"></div><div class="line">a = tf.Variable(0.01)  # learning rate, alpha</div><div class="line">optimizer = tf.train.GradientDescentOptimizer(a)</div><div class="line">train = optimizer.minimize(cost)  # goal is minimize cost</div><div class="line"></div><div class="line">init = tf.global_variables_initializer()</div><div class="line"></div><div class="line">sess = tf.Session()</div><div class="line">sess.run(init)</div><div class="line"></div><div class="line">for step in range(2001):</div><div class="line">    sess.run(train)</div><div class="line">    if step % 200 == 0:</div><div class="line">        print (step, sess.run(cost), sess.run(W))</div></pre></td></tr></table></figure>
<p>다중 선형 회귀를 이용했는데도(W 2개 b 1개) hypothesis 함수 코드가 엄청 간결하죠?<br>행렬의 위력입니다~ (다들 선형대수 열공을..)<br>참고로 x_data와 y_data에는 별다른 의미 없는 값을 넣었습니다.<br>그냥 소스코드 참고용이라… ㅎ</p>
<h1 id="결론은"><a href="#결론은" class="headerlink" title="결론은?"></a>결론은?</h1><p>linear regression이 대략적으로 어떤 요인에 미치는 변수들의 패턴을 선형적으로 파악하고자 하는 것이고 tensorflow를 이용하면 쉽게 구현이 가능하다!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;선형회귀-linear-regression&quot;&gt;&lt;a href=&quot;#선형회귀-linear-regression&quot; class=&quot;headerlink&quot; title=&quot;선형회귀(linear regression)&quot;&gt;&lt;/a&gt;선형회귀(linear regress
    
    </summary>
    
      <category term="Tensorflow" scheme="https://deeptensorflow.github.io/categories/Tensorflow/"/>
    
      <category term="App" scheme="https://deeptensorflow.github.io/categories/Tensorflow/App/"/>
    
    
      <category term="tensorflow" scheme="https://deeptensorflow.github.io/tags/tensorflow/"/>
    
      <category term="linearregression" scheme="https://deeptensorflow.github.io/tags/linearregression/"/>
    
  </entry>
  
  <entry>
    <title>텐서플로우1.0 설치시 일어나는 기본 오류를 잡아보자 (bazel로 소스코드 빌드)</title>
    <link href="https://deeptensorflow.github.io/2017/02/19/how-to-handle-tensorflow1-error/"/>
    <id>https://deeptensorflow.github.io/2017/02/19/how-to-handle-tensorflow1-error/</id>
    <published>2017-02-19T03:23:03.000Z</published>
    <updated>2017-02-19T03:45:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="텐서플로우-1-0을-pip으로-설치하고-사용하면-일어나는-오류"><a href="#텐서플로우-1-0을-pip으로-설치하고-사용하면-일어나는-오류" class="headerlink" title="텐서플로우 1.0을 pip으로 설치하고 사용하면 일어나는 오류"></a>텐서플로우 1.0을 pip으로 설치하고 사용하면 일어나는 오류</h1><p>tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<br>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.<br>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.</p>
<p>이런 오류를 보신적이 없으신가요?<br>텐서플로우1.0을 pip(pip3)으로 설치하면 생기는 오류입니다.<br>간단한 방법으로 (하지만 시간이 조금 걸리는 방법) 해결할 수 있습니다.</p>
<h1 id="bazel을-설치하자"><a href="#bazel을-설치하자" class="headerlink" title="bazel을 설치하자"></a>bazel을 설치하자</h1><p>bazel은 구글에서 만든 빌드 툴입니다.<br><a href="https://bazel.build/" rel="external nofollow noopener noreferrer" target="_blank">https://bazel.build/</a> 에서 다운로드가 가능합니다.<br>apt-get이나 homebrew 를 통해서도 설치가 가능하구요~<br>자 설치가 끝났으면 텐서플로우 소스코드를 직접 빌드해보겠습니다.</p>
<h1 id="텐서플로우-소스코드-빌드하는-방법"><a href="#텐서플로우-소스코드-빌드하는-방법" class="headerlink" title="텐서플로우 소스코드 빌드하는 방법"></a>텐서플로우 소스코드 빌드하는 방법</h1><ul>
<li>텐서플로우 소스코드를 깃허브에서 받은 다음에 python3, numpy,  wheel, six를 pip을 통해 받습니다.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/tensorflow/tensorflow</div><div class="line">cd tensorflow</div><div class="line">git checkout r1.0 #빌드를 원하는 버전을 입력하시면 되요.</div><div class="line">sudo apt-get install python3-numpy python3-dev python3-pip python3-wheel #ubuntu 쓰는 분들만</div><div class="line">brew install python3 #맥 쓰는 분들만</div><div class="line">sudo pip3 install six numpy wheel #맥쓰는 분들만</div></pre></td></tr></table></figure>
<ul>
<li>GPU 쓰실 분들은 아래의 명령어도 터미널에서 입력해주세요.</li>
</ul>
<p>저는 PC에 GPU가 안달려있어서 테스트를 못해봤네요.<br>조만간 GPU를 달 계획입니다!<br>그런데 아마 오류는 없을거에요.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libcupti-dev #ubuntu 쓰는 분들만</div><div class="line">brew install coreutils #맥쓰는 분들만</div><div class="line">sudo xcode-select -s /Application/Xcode-7.2/Xcode.app #맥쓰는 분들만</div></pre></td></tr></table></figure></p>
<ul>
<li>configure를 해봅시다.</li>
</ul>
<figure class="highlight plain"><figcaption><span>tensorflow.org code</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">$ cd tensorflow  # cd to the top-level directory created</div><div class="line">$ ./configure</div><div class="line">Please specify the location of python. [Default is /usr/bin/python]: /usr/bin/python2.7</div><div class="line">Please specify optimization flags to use during compilation when bazel option &quot;--config=opt&quot; is specified [Default is -march=native]:</div><div class="line">Do you wish to use jemalloc as the malloc implementation? [Y/n]</div><div class="line">jemalloc enabled</div><div class="line">Do you wish to build TensorFlow with Google Cloud Platform support? [y/N]</div><div class="line">No Google Cloud Platform support will be enabled for TensorFlow</div><div class="line">Do you wish to build TensorFlow with Hadoop File System support? [y/N]</div><div class="line">No Hadoop File System support will be enabled for TensorFlow</div><div class="line">Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]</div><div class="line">No XLA JIT support will be enabled for TensorFlow</div><div class="line">Found possible Python library paths:</div><div class="line">  /usr/local/lib/python2.7/dist-packages</div><div class="line">  /usr/lib/python2.7/dist-packages</div><div class="line">Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]</div><div class="line">Using python library path: /usr/local/lib/python2.7/dist-packages</div><div class="line">Do you wish to build TensorFlow with OpenCL support? [y/N] N</div><div class="line">No OpenCL support will be enabled for TensorFlow</div><div class="line">Do you wish to build TensorFlow with CUDA support? [y/N] Y</div><div class="line">CUDA support will be enabled for TensorFlow</div><div class="line">Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:</div><div class="line">Please specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0</div><div class="line">Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:</div><div class="line">Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5</div><div class="line">Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:</div><div class="line">Please specify a list of comma-separated Cuda compute capabilities you want to build with.</div><div class="line">You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.</div><div class="line">Please note that each additional compute capability significantly increases your build time and binary size.</div><div class="line">[Default is: &quot;3.5,5.2&quot;]: 3.0</div><div class="line">Setting up Cuda include</div><div class="line">Setting up Cuda lib</div><div class="line">Setting up Cuda bin</div><div class="line">Setting up Cuda nvvm</div><div class="line">Setting up CUPTI include</div><div class="line">Setting up CUPTI lib64</div><div class="line">Configuration finished</div></pre></td></tr></table></figure>
<p>특별히 신경써야할 부분은 처음에 나오는 이부분들입니다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Please specify the location of python. [Default is /usr/bin/python]: (설정할 파이썬 path)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Do you wish to build TensorFlow with CUDA support? Y(gpu 쓰실 분들은 y해야겠죠~)</div></pre></td></tr></table></figure>
<p>잘 모르시겠으면 그냥 다 N 누르면서 진행하시면 원래 쓰시던 tensorflow 나올거에요~<br>영어 잘하시면 직접 해석하시면서 설정을 해주세요. ㅎㅎ</p>
<ul>
<li>bazel 설정하기</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package #cpu버전일경우</div><div class="line">bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  #gpu버전일 경우</div></pre></td></tr></table></figure>
<ul>
<li>bazel로 빌드하기</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg</div></pre></td></tr></table></figure>
<ul>
<li>pip 패키지 설치하기</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo pip install /tmp/tensorflow_pkg/tensorflow-1.0.0-py2-none-any.whl #python2버전</div><div class="line">sudo pip3 install /tmp/tensorflow_pkg/tensorflow-1.0.0-cp36-cp36m-macosx_10_12_x86_64.whl #python3버전</div></pre></td></tr></table></figure>
<p>이건 설정에 따라서 다르닌깐요<br>sudo pip(파이썬3이면 pip3) install /tmp/tensorflow_pkg/ 한다음에 tab키 쳐주시면 뜨는데 그리고 엔터 눌러주세요.</p>
<h1 id="끝"><a href="#끝" class="headerlink" title="끝!"></a>끝!</h1><p>이제 끝났습니다.<br>이제 저런 오류없이 텐서플로우가 작동할 것입니다.<br>긴 글 읽어주셔서 고맙습니다.<br><a href="https://www.tensorflow.org/install/install_sources" rel="external nofollow noopener noreferrer" target="_blank">https://www.tensorflow.org/install/install_sources</a> 를 참고하여 작성한 문서입니다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;텐서플로우-1-0을-pip으로-설치하고-사용하면-일어나는-오류&quot;&gt;&lt;a href=&quot;#텐서플로우-1-0을-pip으로-설치하고-사용하면-일어나는-오류&quot; class=&quot;headerlink&quot; title=&quot;텐서플로우 1.0을 pip으로 설치하고 사용
    
    </summary>
    
      <category term="Tensorflow" scheme="https://deeptensorflow.github.io/categories/Tensorflow/"/>
    
      <category term="App" scheme="https://deeptensorflow.github.io/categories/Tensorflow/App/"/>
    
    
      <category term="tensorflow" scheme="https://deeptensorflow.github.io/tags/tensorflow/"/>
    
      <category term="install" scheme="https://deeptensorflow.github.io/tags/install/"/>
    
      <category term="bazel" scheme="https://deeptensorflow.github.io/tags/bazel/"/>
    
  </entry>
  
  <entry>
    <title>최고의 머신러닝, 텐서플로우 초보용 무료강의를 소개합니다.</title>
    <link href="https://deeptensorflow.github.io/2017/02/18/sung-hun-kim-ml-lecture/"/>
    <id>https://deeptensorflow.github.io/2017/02/18/sung-hun-kim-ml-lecture/</id>
    <published>2017-02-18T12:49:50.000Z</published>
    <updated>2017-02-18T12:56:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="머신러닝이-무엇인지-모른다면"><a href="#머신러닝이-무엇인지-모른다면" class="headerlink" title="머신러닝이 무엇인지 모른다면?"></a>머신러닝이 무엇인지 모른다면?</h1><p>이전 포스팅을 봐주세요.</p>
<h1 id="최고의-입문용-강의를-소개합니다"><a href="#최고의-입문용-강의를-소개합니다" class="headerlink" title="최고의 입문용 강의를 소개합니다."></a>최고의 입문용 강의를 소개합니다.</h1><p>홍공 과기대의 김성훈 교수님이 진행하는 “모두를 위한 머신러닝과 딥러닝 강의”를 소개합니다.<br>입문용 강의로는 정말 최고라고 생각됩니다.<br>머신러닝에 대한 기초 알고리즘부터 텐서플로우로 응용까지 자세히 설명해 주셨습니다.<br>수학이나 프로그래밍에 대한 기초가 없어도 편하게 들을 수 있습니다.<br>(단, 파이썬은 아주 약간은 알아야 합니다.)<br>파이썬을 아예 모르신다면 <a href="https://wikidocs.net/book/1" rel="external nofollow noopener noreferrer" target="_blank">https://wikidocs.net/book/1</a> 에서 무료로 공부하시는 것을 추천드립니다.<br>자, 시범 강의 하나만 띄우겠습니다.<br><div class="video-container"><iframe src="//www.youtube.com/embed/dZ4vw6v3LcA" frameborder="0" allowfullscreen></iframe></div><br>매우 재미있겠지요?<br>아주 쉽게 차근차근 잘 설명해주시니 기초지식이 없어도 두려워하지 마세요.<br><a href="https://hunkim.github.io/ml/" rel="external nofollow noopener noreferrer" target="_blank">https://hunkim.github.io/ml/</a> 로 가면 김성훈 교수님의 모든 강의를 무료로 볼 수 있습니다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;머신러닝이-무엇인지-모른다면&quot;&gt;&lt;a href=&quot;#머신러닝이-무엇인지-모른다면&quot; class=&quot;headerlink&quot; title=&quot;머신러닝이 무엇인지 모른다면?&quot;&gt;&lt;/a&gt;머신러닝이 무엇인지 모른다면?&lt;/h1&gt;&lt;p&gt;이전 포스팅을 봐주세요.&lt;/p
    
    </summary>
    
      <category term="Machinelearning" scheme="https://deeptensorflow.github.io/categories/Machinelearning/"/>
    
      <category term="Lecture" scheme="https://deeptensorflow.github.io/categories/Machinelearning/Lecture/"/>
    
    
      <category term="machinelearning" scheme="https://deeptensorflow.github.io/tags/machinelearning/"/>
    
      <category term="lecture" scheme="https://deeptensorflow.github.io/tags/lecture/"/>
    
  </entry>
  
  <entry>
    <title>왜 머신러닝은 주목받을까? 머신러닝이 무엇인지 알아보자.</title>
    <link href="https://deeptensorflow.github.io/2017/02/18/why-machinelearning-is-appeared/"/>
    <id>https://deeptensorflow.github.io/2017/02/18/why-machinelearning-is-appeared/</id>
    <published>2017-02-18T12:15:56.000Z</published>
    <updated>2017-02-19T03:52:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="머신러닝이-세상에-나오게-된-계기"><a href="#머신러닝이-세상에-나오게-된-계기" class="headerlink" title="머신러닝이 세상에 나오게 된 계기"></a>머신러닝이 세상에 나오게 된 계기</h1><p><img src="https://deeptensorflow.github.io/images/ml1.png" alt="machinelearning_1"><br>본래 프로그래머들이 프로그래밍을 짜는 방법은 일일이 가르쳐주는 방식이었습니다.<br>입력값이 0일때는 작동을 중지하고 입력값이 1일때는 작동을 시작하고 이런 방식이었죠.<br>그러다가 프로그래머들은 다음과 같은 호기심이 생깁니다.<br>“프로그램이 인간처럼 학습할 수 있을까?”<br>많은 오류들을 거쳐(이 오류들을 해결하는 과정이 상당히 재밌는데 다음에 다루겠습니다.) 결국 기계를 인간처럼 학습시키는데 성공하게 되고 이러한 프로그래밍을 머신러닝이라고 부르게 됩니다.</p>
<h1 id="머신러닝은-무엇이-좋은가"><a href="#머신러닝은-무엇이-좋은가" class="headerlink" title="머신러닝은 무엇이 좋은가?"></a>머신러닝은 무엇이 좋은가?</h1><p>머신러닝의 장점은 인간처럼 행동할 수 있다는 것입니다.<br>원래는 우리는 기계에게 수많은 rule들을 제시해가며 행동을 가르쳤습니다.<br>하지만 인간을 떠올린다면 인간은 무엇이 착한일이고 무엇이 나쁜일인지 어떻게 알게 되었을까요?<br>무슨 행동을 일단 해보고 혼나면 나쁜일, 칭찬을 들으면 착한일이라고 알지 않았을까요?<br>머신러닝을 적용하면 기계도 마찬가지로 행동을 할 수 있게 됩니다.<br>우선 시험 데이터를 모아서 정답 데이터와 비교를 해봅니다.<br>이렇게 시험 학습된 기계는 따로 인간이 rule을 정해주지 않아도 다음부터는 데이터가 들어오면 알아서 학습한 내용을 바탕으로 행동을 할 수 있게 됩니다.<br>예를들어 사진 판별, 언어번역, 자동운전 등을 생각해 봅시다.<br>일일히 규칙들을 정해준다면 얼마나 복잡할까요?<br>그리고 새로운 규칙들이 매번 생겨나는 경우들도 있지요.<br>이러한 경우에 머신러닝을 도입하면 상당히 프로그래밍이 쉽고 정교하게 됩니다.</p>
<h1 id="머신러닝의-미래"><a href="#머신러닝의-미래" class="headerlink" title="머신러닝의 미래"></a>머신러닝의 미래</h1><p>현재 구글이 tensorflow를 발표하고 머신러닝 1등 라이브러리로 우뚝 섰습니다.<br>텐서플로우로 인해서 프로그래밍을 모르는 일반인들도 한달정도만 공부를 해도 어느정도 머신러닝을 활용할 수 있게 되어 진입장벽이 매우 낮아졌습니다.<br>그리고 현재 우리나라는 비교적 소극적이지만 미국, 중국에서는 고액 연봉을 제시하며 서로 머신러닝 관련 프로그래머들을 영입하고 있습니다.<br>점점 머신러닝을 자신들의 제품에 도입하는 경우도 늘어가고 있지요.<br>머신러닝의 미래는 밝습니다!<br>그리고 누구나 머신러닝을 사용할 수 있습니다!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;머신러닝이-세상에-나오게-된-계기&quot;&gt;&lt;a href=&quot;#머신러닝이-세상에-나오게-된-계기&quot; class=&quot;headerlink&quot; title=&quot;머신러닝이 세상에 나오게 된 계기&quot;&gt;&lt;/a&gt;머신러닝이 세상에 나오게 된 계기&lt;/h1&gt;&lt;p&gt;&lt;img s
    
    </summary>
    
      <category term="Machinelearning" scheme="https://deeptensorflow.github.io/categories/Machinelearning/"/>
    
      <category term="News" scheme="https://deeptensorflow.github.io/categories/Machinelearning/News/"/>
    
    
      <category term="machinelearning" scheme="https://deeptensorflow.github.io/tags/machinelearning/"/>
    
  </entry>
  
  <entry>
    <title>텐서플로우 1.0(최신버전) 설치하는 방법</title>
    <link href="https://deeptensorflow.github.io/2017/02/18/install-tensorflow/"/>
    <id>https://deeptensorflow.github.io/2017/02/18/install-tensorflow/</id>
    <published>2017-02-18T09:56:35.000Z</published>
    <updated>2017-02-19T01:12:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="텐서플로우-설치"><a href="#텐서플로우-설치" class="headerlink" title="텐서플로우 설치"></a>텐서플로우 설치</h1><p>텐서플로우 1.0버전이 출시되었습니다~<br>API변동이 약간 있는 것으로 파악되며 앞으로 텐서플로우1.0을 분석하여 블로그를 작성해보도록 하겠습니다.<br>텐서플로우 공식 홈페이지에서 권장하는 방식인 virtualenv로 설치하는 방법을 택하였습니다.<br>virtualenv를 사용하면 다른 python 프로그램들에 간섭하거나 영향받는 일이 없어집니다.</p>
<h2 id="텐서플로우-MAC-설치"><a href="#텐서플로우-MAC-설치" class="headerlink" title="텐서플로우 MAC 설치"></a>텐서플로우 MAC 설치</h2><ul>
<li>homebrew 설치</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<p>homebrew는 mac의 패키지 관리자입니다.</p>
<ul>
<li>python3 설치</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install python3</div></pre></td></tr></table></figure>
<ul>
<li>virtualenv 설치</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install virtualenv</div></pre></td></tr></table></figure>
<ul>
<li>virtualenv 환경 세팅(tensorflow 폴더)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">virtualenv tensorflow</div><div class="line">source tensorflow/bin/activate</div><div class="line">cd tensorflow</div></pre></td></tr></table></figure>
<ul>
<li>tensorflow 최신버전 설치(cpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow</div></pre></td></tr></table></figure>
<ul>
<li>tensorflow 최신버전 설치(gpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow-gpu</div></pre></td></tr></table></figure>
<ul>
<li>설치에 실패한 경우</li>
</ul>
<p>pip3 버전이 8.1이하인 경우일 것입니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew upgrade python3</div></pre></td></tr></table></figure><br>해주시고 다시 처음부터 진행해 주시기 바랍니다.</p>
<ul>
<li>가상환경을 종료하고 싶은경우</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deactivate</div></pre></td></tr></table></figure>
<h2 id="텐서플로우-LINUX-설치"><a href="#텐서플로우-LINUX-설치" class="headerlink" title="텐서플로우 LINUX 설치"></a>텐서플로우 LINUX 설치</h2><ul>
<li>python3 설치</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python3</div></pre></td></tr></table></figure>
<ul>
<li>virtualenv 설치</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install virtualenv</div></pre></td></tr></table></figure>
<ul>
<li>virtualenv 환경 세팅(tensorflow 폴더)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">virtualenv tensorflow</div><div class="line">source tensorflow/bin/activate</div><div class="line">cd tensorflow</div></pre></td></tr></table></figure>
<ul>
<li>tensorflow 최신버전 설치(cpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow</div></pre></td></tr></table></figure>
<ul>
<li>tensorflow 최신버전 설치(gpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow-gpu</div></pre></td></tr></table></figure>
<ul>
<li>설치에 실패한 경우</li>
</ul>
<p>pip3 버전이 8.1이하인 경우일 것입니다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get upgrade python3</div></pre></td></tr></table></figure>
<p>해주시고 다시 처음부터 진행해 주시기 바랍니다.</p>
<ul>
<li>가상환경을 종료하고 싶은경우</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deactivate</div></pre></td></tr></table></figure>
<h2 id="텐서플로우-WINDOW-설치"><a href="#텐서플로우-WINDOW-설치" class="headerlink" title="텐서플로우 WINDOW 설치"></a>텐서플로우 WINDOW 설치</h2><ul>
<li>python 3.5 설치</li>
</ul>
<p>다른 운영체제와 다르게 3.6버전을 아직 지원하지 않으니 주의 바랍니다.<br><a href="https://www.python.org/downloads/release/python-352/" rel="external nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/release/python-352/</a><br>위의 링크에서 3.5버전을 다운받으시기 바랍니다.</p>
<ul>
<li>tensorflow 최신버전 설치(cpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow</div></pre></td></tr></table></figure>
<ul>
<li>tensorflow 최신버전 설치(gpu버전)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install --upgrade tensorflow-gpu</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;텐서플로우-설치&quot;&gt;&lt;a href=&quot;#텐서플로우-설치&quot; class=&quot;headerlink&quot; title=&quot;텐서플로우 설치&quot;&gt;&lt;/a&gt;텐서플로우 설치&lt;/h1&gt;&lt;p&gt;텐서플로우 1.0버전이 출시되었습니다~&lt;br&gt;API변동이 약간 있는 것으로 파악되며
    
    </summary>
    
      <category term="Tensorflow" scheme="https://deeptensorflow.github.io/categories/Tensorflow/"/>
    
      <category term="App" scheme="https://deeptensorflow.github.io/categories/Tensorflow/App/"/>
    
    
      <category term="tensorflow" scheme="https://deeptensorflow.github.io/tags/tensorflow/"/>
    
      <category term="install" scheme="https://deeptensorflow.github.io/tags/install/"/>
    
  </entry>
  
</feed>
