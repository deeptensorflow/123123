{"meta":{"title":"Tensorflow Internal","subtitle":"All about tensorflow","description":"Talk about tensorflow internal. And IT.","author":"MyeongsooKim","url":"https://deeptensorflow.github.io"},"pages":[],"posts":[{"title":"텐서플로우1.0 설치시 일어나는 기본 오류를 잡아보자 (bazel로 소스코드 빌드)","slug":"how-to-handle-tensorflow1-error","date":"2017-02-19T03:23:03.000Z","updated":"2017-02-19T03:45:26.000Z","comments":true,"path":"2017/02/19/how-to-handle-tensorflow1-error/","link":"","permalink":"https://deeptensorflow.github.io/2017/02/19/how-to-handle-tensorflow1-error/","excerpt":"","text":"텐서플로우 1.0을 pip으로 설치하고 사용하면 일어나는 오류tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn’t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations. 이런 오류를 보신적이 없으신가요?텐서플로우1.0을 pip(pip3)으로 설치하면 생기는 오류입니다.간단한 방법으로 (하지만 시간이 조금 걸리는 방법) 해결할 수 있습니다. bazel을 설치하자bazel은 구글에서 만든 빌드 툴입니다.https://bazel.build/ 에서 다운로드가 가능합니다.apt-get이나 homebrew 를 통해서도 설치가 가능하구요~자 설치가 끝났으면 텐서플로우 소스코드를 직접 빌드해보겠습니다. 텐서플로우 소스코드 빌드하는 방법 텐서플로우 소스코드를 깃허브에서 받은 다음에 python3, numpy, wheel, six를 pip을 통해 받습니다. 123456git clone https://github.com/tensorflow/tensorflowcd tensorflowgit checkout r1.0 #빌드를 원하는 버전을 입력하시면 되요.sudo apt-get install python3-numpy python3-dev python3-pip python3-wheel #ubuntu 쓰는 분들만brew install python3 #맥 쓰는 분들만sudo pip3 install six numpy wheel #맥쓰는 분들만 GPU 쓰실 분들은 아래의 명령어도 터미널에서 입력해주세요. 저는 PC에 GPU가 안달려있어서 테스트를 못해봤네요.조만간 GPU를 달 계획입니다!그런데 아마 오류는 없을거에요.123sudo apt-get install libcupti-dev #ubuntu 쓰는 분들만brew install coreutils #맥쓰는 분들만sudo xcode-select -s /Application/Xcode-7.2/Xcode.app #맥쓰는 분들만 configure를 해봅시다. tensorflow.org code12345678910111213141516171819202122232425262728293031323334353637$ cd tensorflow # cd to the top-level directory created$ ./configurePlease specify the location of python. [Default is /usr/bin/python]: /usr/bin/python2.7Please specify optimization flags to use during compilation when bazel option &quot;--config=opt&quot; is specified [Default is -march=native]:Do you wish to use jemalloc as the malloc implementation? [Y/n]jemalloc enabledDo you wish to build TensorFlow with Google Cloud Platform support? [y/N]No Google Cloud Platform support will be enabled for TensorFlowDo you wish to build TensorFlow with Hadoop File System support? [y/N]No Hadoop File System support will be enabled for TensorFlowDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]No XLA JIT support will be enabled for TensorFlowFound possible Python library paths: /usr/local/lib/python2.7/dist-packages /usr/lib/python2.7/dist-packagesPlease input the desired Python library path to use. Default is [/usr/local/lib/python2.7/dist-packages]Using python library path: /usr/local/lib/python2.7/dist-packagesDo you wish to build TensorFlow with OpenCL support? [y/N] NNo OpenCL support will be enabled for TensorFlowDo you wish to build TensorFlow with CUDA support? [y/N] YCUDA support will be enabled for TensorFlowPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:Please specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:Please specify a list of comma-separated Cuda compute capabilities you want to build with.You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.Please note that each additional compute capability significantly increases your build time and binary size.[Default is: &quot;3.5,5.2&quot;]: 3.0Setting up Cuda includeSetting up Cuda libSetting up Cuda binSetting up Cuda nvvmSetting up CUPTI includeSetting up CUPTI lib64Configuration finished 특별히 신경써야할 부분은 처음에 나오는 이부분들입니다. 1Please specify the location of python. [Default is /usr/bin/python]: (설정할 파이썬 path) 1Do you wish to build TensorFlow with CUDA support? Y(gpu 쓰실 분들은 y해야겠죠~) 잘 모르시겠으면 그냥 다 N 누르면서 진행하시면 원래 쓰시던 tensorflow 나올거에요~영어 잘하시면 직접 해석하시면서 설정을 해주세요. ㅎㅎ bazel 설정하기 12bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package #cpu버전일경우bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package #gpu버전일 경우 bazel로 빌드하기 1bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg pip 패키지 설치하기 12sudo pip install /tmp/tensorflow_pkg/tensorflow-1.0.0-py2-none-any.whl #python2버전sudo pip3 install /tmp/tensorflow_pkg/tensorflow-1.0.0-cp36-cp36m-macosx_10_12_x86_64.whl #python3버전 이건 설정에 따라서 다르닌깐요sudo pip(파이썬3이면 pip3) install /tmp/tensorflow_pkg/ 한다음에 tab키 쳐주시면 뜨는데 그리고 엔터 눌러주세요. 끝!이제 끝났습니다.이제 저런 오류없이 텐서플로우가 작동할 것입니다.긴 글 읽어주셔서 고맙습니다.https://www.tensorflow.org/install/install_sources 를 참고하여 작성한 문서입니다.","categories":[{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://deeptensorflow.github.io/categories/Tensorflow/"},{"name":"App","slug":"Tensorflow/App","permalink":"https://deeptensorflow.github.io/categories/Tensorflow/App/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"https://deeptensorflow.github.io/tags/tensorflow/"},{"name":"install","slug":"install","permalink":"https://deeptensorflow.github.io/tags/install/"},{"name":"bazel","slug":"bazel","permalink":"https://deeptensorflow.github.io/tags/bazel/"}]},{"title":"최고의 머신러닝, 텐서플로우 초보용 무료강의를 소개합니다.","slug":"sung-hun-kim-ml-lecture","date":"2017-02-18T12:49:50.000Z","updated":"2017-02-18T12:56:40.000Z","comments":true,"path":"2017/02/18/sung-hun-kim-ml-lecture/","link":"","permalink":"https://deeptensorflow.github.io/2017/02/18/sung-hun-kim-ml-lecture/","excerpt":"","text":"머신러닝이 무엇인지 모른다면?이전 포스팅을 봐주세요. 최고의 입문용 강의를 소개합니다.홍공 과기대의 김성훈 교수님이 진행하는 “모두를 위한 머신러닝과 딥러닝 강의”를 소개합니다.입문용 강의로는 정말 최고라고 생각됩니다.머신러닝에 대한 기초 알고리즘부터 텐서플로우로 응용까지 자세히 설명해 주셨습니다.수학이나 프로그래밍에 대한 기초가 없어도 편하게 들을 수 있습니다.(단, 파이썬은 아주 약간은 알아야 합니다.)파이썬을 아예 모르신다면 https://wikidocs.net/book/1 에서 무료로 공부하시는 것을 추천드립니다.자, 시범 강의 하나만 띄우겠습니다.매우 재미있겠지요?아주 쉽게 차근차근 잘 설명해주시니 기초지식이 없어도 두려워하지 마세요.https://hunkim.github.io/ml/ 로 가면 김성훈 교수님의 모든 강의를 무료로 볼 수 있습니다.","categories":[{"name":"Machinelearning","slug":"Machinelearning","permalink":"https://deeptensorflow.github.io/categories/Machinelearning/"},{"name":"Lecture","slug":"Machinelearning/Lecture","permalink":"https://deeptensorflow.github.io/categories/Machinelearning/Lecture/"}],"tags":[{"name":"machinelearning","slug":"machinelearning","permalink":"https://deeptensorflow.github.io/tags/machinelearning/"},{"name":"lecture","slug":"lecture","permalink":"https://deeptensorflow.github.io/tags/lecture/"}]},{"title":"왜 머신러닝은 주목받을까? 머신러닝이 무엇인지 알아보자.","slug":"why-machinelearning-is-appeared","date":"2017-02-18T12:15:56.000Z","updated":"2017-02-19T03:52:48.000Z","comments":true,"path":"2017/02/18/why-machinelearning-is-appeared/","link":"","permalink":"https://deeptensorflow.github.io/2017/02/18/why-machinelearning-is-appeared/","excerpt":"","text":"머신러닝이 세상에 나오게 된 계기본래 프로그래머들이 프로그래밍을 짜는 방법은 일일이 가르쳐주는 방식이었습니다.입력값이 0일때는 작동을 중지하고 입력값이 1일때는 작동을 시작하고 이런 방식이었죠.그러다가 프로그래머들은 다음과 같은 호기심이 생깁니다.“프로그램이 인간처럼 학습할 수 있을까?”많은 오류들을 거쳐(이 오류들을 해결하는 과정이 상당히 재밌는데 다음에 다루겠습니다.) 결국 기계를 인간처럼 학습시키는데 성공하게 되고 이러한 프로그래밍을 머신러닝이라고 부르게 됩니다. 머신러닝은 무엇이 좋은가?머신러닝의 장점은 인간처럼 행동할 수 있다는 것입니다.원래는 우리는 기계에게 수많은 rule들을 제시해가며 행동을 가르쳤습니다.하지만 인간을 떠올린다면 인간은 무엇이 착한일이고 무엇이 나쁜일인지 어떻게 알게 되었을까요?무슨 행동을 일단 해보고 혼나면 나쁜일, 칭찬을 들으면 착한일이라고 알지 않았을까요?머신러닝을 적용하면 기계도 마찬가지로 행동을 할 수 있게 됩니다.우선 시험 데이터를 모아서 정답 데이터와 비교를 해봅니다.이렇게 시험 학습된 기계는 따로 인간이 rule을 정해주지 않아도 다음부터는 데이터가 들어오면 알아서 학습한 내용을 바탕으로 행동을 할 수 있게 됩니다.예를들어 사진 판별, 언어번역, 자동운전 등을 생각해 봅시다.일일히 규칙들을 정해준다면 얼마나 복잡할까요?그리고 새로운 규칙들이 매번 생겨나는 경우들도 있지요.이러한 경우에 머신러닝을 도입하면 상당히 프로그래밍이 쉽고 정교하게 됩니다. 머신러닝의 미래현재 구글이 tensorflow를 발표하고 머신러닝 1등 라이브러리로 우뚝 섰습니다.텐서플로우로 인해서 프로그래밍을 모르는 일반인들도 한달정도만 공부를 해도 어느정도 머신러닝을 활용할 수 있게 되어 진입장벽이 매우 낮아졌습니다.그리고 현재 우리나라는 비교적 소극적이지만 미국, 중국에서는 고액 연봉을 제시하며 서로 머신러닝 관련 프로그래머들을 영입하고 있습니다.점점 머신러닝을 자신들의 제품에 도입하는 경우도 늘어가고 있지요.머신러닝의 미래는 밝습니다!그리고 누구나 머신러닝을 사용할 수 있습니다!","categories":[{"name":"Machinelearning","slug":"Machinelearning","permalink":"https://deeptensorflow.github.io/categories/Machinelearning/"},{"name":"News","slug":"Machinelearning/News","permalink":"https://deeptensorflow.github.io/categories/Machinelearning/News/"}],"tags":[{"name":"machinelearning","slug":"machinelearning","permalink":"https://deeptensorflow.github.io/tags/machinelearning/"}]},{"title":"텐서플로우 1.0(최신버전) 설치하는 방법","slug":"install-tensorflow","date":"2017-02-18T09:56:35.000Z","updated":"2017-02-19T01:12:01.000Z","comments":true,"path":"2017/02/18/install-tensorflow/","link":"","permalink":"https://deeptensorflow.github.io/2017/02/18/install-tensorflow/","excerpt":"","text":"텐서플로우 설치텐서플로우 1.0버전이 출시되었습니다~API변동이 약간 있는 것으로 파악되며 앞으로 텐서플로우1.0을 분석하여 블로그를 작성해보도록 하겠습니다.텐서플로우 공식 홈페이지에서 권장하는 방식인 virtualenv로 설치하는 방법을 택하였습니다.virtualenv를 사용하면 다른 python 프로그램들에 간섭하거나 영향받는 일이 없어집니다. 텐서플로우 MAC 설치 homebrew 설치 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; homebrew는 mac의 패키지 관리자입니다. python3 설치 1brew install python3 virtualenv 설치 1pip3 install virtualenv virtualenv 환경 세팅(tensorflow 폴더) 123virtualenv tensorflowsource tensorflow/bin/activatecd tensorflow tensorflow 최신버전 설치(cpu버전) 1pip3 install --upgrade tensorflow tensorflow 최신버전 설치(gpu버전) 1pip3 install --upgrade tensorflow-gpu 설치에 실패한 경우 pip3 버전이 8.1이하인 경우일 것입니다.1brew upgrade python3해주시고 다시 처음부터 진행해 주시기 바랍니다. 가상환경을 종료하고 싶은경우 1deactivate 텐서플로우 LINUX 설치 python3 설치 1sudo apt-get install python3 virtualenv 설치 1pip3 install virtualenv virtualenv 환경 세팅(tensorflow 폴더) 123virtualenv tensorflowsource tensorflow/bin/activatecd tensorflow tensorflow 최신버전 설치(cpu버전) 1pip3 install --upgrade tensorflow tensorflow 최신버전 설치(gpu버전) 1pip3 install --upgrade tensorflow-gpu 설치에 실패한 경우 pip3 버전이 8.1이하인 경우일 것입니다. 1sudo apt-get upgrade python3 해주시고 다시 처음부터 진행해 주시기 바랍니다. 가상환경을 종료하고 싶은경우 1deactivate 텐서플로우 WINDOW 설치 python 3.5 설치 다른 운영체제와 다르게 3.6버전을 아직 지원하지 않으니 주의 바랍니다.https://www.python.org/downloads/release/python-352/위의 링크에서 3.5버전을 다운받으시기 바랍니다. tensorflow 최신버전 설치(cpu버전) 1pip3 install --upgrade tensorflow tensorflow 최신버전 설치(gpu버전) 1pip3 install --upgrade tensorflow-gpu","categories":[{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://deeptensorflow.github.io/categories/Tensorflow/"},{"name":"App","slug":"Tensorflow/App","permalink":"https://deeptensorflow.github.io/categories/Tensorflow/App/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"https://deeptensorflow.github.io/tags/tensorflow/"},{"name":"install","slug":"install","permalink":"https://deeptensorflow.github.io/tags/install/"}]}]}